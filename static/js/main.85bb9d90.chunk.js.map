{"version":3,"sources":["redux/slices/weatherSlices.js","redux/store/store.js","img/weather.svg","App.js","reportWebVitals.js","index.js"],"names":["fetchWeatherAction","createAsyncThunk","payload","a","rejectWithValue","getState","dispatch","fetch","process","data2","json","val","latt","coord","lat","lonn","lon","axios","get","data3","response","weatherSlice","createSlice","name","initialState","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","weather","data","error","undefined","rejected","store","configureStore","reducer","weatherReducer","App","useState","city","setCity","useDispatch","useEffect","useSelector","days","local_date","Date","daily","dt","toLocaleTimeString","dayNum","getDay","days_res","i","push","class","value","onChange","e","target","placeholder","type","className","onClick","message","id","src","icon","alt","width","height","Math","ceil","Number","temp","max","min","humidity","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85bb9d90.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport const fetchWeatherAction = createAsyncThunk(\n  \"weather/fetch\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    try {\n      \n      const data2 = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${payload}&appid=${process.env.REACT_APP_OPEN_WEATHER_KEY}`\n      )\n      const val = await data2.json();\n      const latt = val.coord.lat\n      const lonn = val.coord.lon\n\n      const data3 = await axios.get(\n        `http://api.openweathermap.org/data/2.5/onecall?lat=${latt}&lon=${lonn}&appid=${process.env.REACT_APP_OPEN_WEATHER_KEY}`\n      );\n      return data3;\n    } catch (error) {\n      if (!error.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data3);\n    }\n  }\n);\nconst weatherSlice = createSlice({\n  name: \"weather\",\n  initialState: {},\n  extraReducers: builder => {\n    builder.addCase(fetchWeatherAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchWeatherAction.fulfilled, (state, action) => {\n      state.weather = action?.payload?.data;\n      state.loading = false;\n      state.error = undefined;\n    });\n    builder.addCase(fetchWeatherAction.rejected, (state, action) => {\n      state.loading = false;\n      state.weather = undefined;\n      state.error = action?.payload?.data;\n    });\n  },\n});\nexport default weatherSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport weatherReducer from \"../slices/weatherSlices\";\nconst store = configureStore({\n  reducer: weatherReducer,\n});\nexport default store;\n","export default __webpack_public_path__ + \"static/media/weather.41709da0.svg\";","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport weatherSVG from \"./img/weather.svg\";\nimport { fetchWeatherAction } from \"./redux/slices/weatherSlices\";\nimport './App.css';\n\nfunction App() {\n  const [city, setCity] = useState(\"kargil\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchWeatherAction(\"India\"));\n  }, []);\n\n  const state = useSelector(state => state);\n  const { weather, loading, error } = state;\n  var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; \n  var local_date = new Date(weather?.daily[0].dt * 1000).toLocaleTimeString(\"en-US\")\n  var dayNum = new Date( local_date * 1000).getDay();\n  var days_res = [], i = -1, len = 5;\n  while (++i <= len) {\n    var dayNum = new Date( weather?.daily[i].dt * 1000).getDay();\n  days_res.push(days[dayNum]);\n  }\n  // console.log(state);\n  return (\n    <div>\n      <section class=\"relative bg-gray-900  min-h-screen\">\n        <div class=\"relative container pt-12 px-4 mb-20 mx-auto text-center\">\n          <h2 class=\"mt-8 mb-8 lg:mb-12 text-white text-4xl lg:text-6xl font-semibold\">\n            Weather App\n          </h2>\n          <input\n            // onClick={() => dispatch(fetchWeatherAction(city))}\n            value={city}\n            onChange={e => setCity(e.target.value)}\n            placeholder=\"Search City\"\n            class=\"relative z-10 inline-block w-full md:w-auto mb-2  px-3 py-2 mr-4  font-medium leading-normal bg-transparent border-2 rounded-lg text-green-400 \"\n          ></input>\n          <button\n            type=\"button\"\n            className=\"inline-flex items-center px-3 pr-3 28 text-center py-3 border border-transparent text-sm leading-4 font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            onClick={() => dispatch(fetchWeatherAction(city))}\n          >\n            Search\n          </button>\n        </div>\n        {loading ? (\n          <h1 className=\"text-gray-400 text-4xl text-center\">\n            Loading please wait...\n          </h1>\n        ) : error ? (\n          <h1 className=\"text-red-400 text-2xl text-center\">\n            {error?.message}\n          </h1>          \n        ) : (\n          <div>\n            <div class=\"container1\">\n              <div class=\"block\" id=\"result1\">\n                <div class=\"image\">\n                  <img src={`https://openweathermap.org/img/wn/${weather?.daily[0].weather[0].icon}@2x.png`}\n                        alt=\"/\" width=\"60px\" height=\"60px\"/>\n                </div>\n                <h1 class = \"day\"> Today</h1>\n                <div class=\"content\"> \n                  <h1 class=\"text-gray-300 text-center text-2xl \">\n                    <span class=\"text-yellow-500 text-2xl\">Max: </span>\n                    {Math.ceil(Number(weather?.daily[0].temp?.max)-273.15)}{\" \"}\n                    <span class=\"text-yellow-500 text-2xl\">°C</span>\n                  </h1>\n                  <h1 class=\"text-gray-300 text-center text-2xl\">\n                    <span class=\"text-yellow-500 text-2xl\">Min: </span>\n                    {Math.ceil(Number(weather?.daily[0].temp?.min)-273.15)}{\" \"}\n                    <span class=\"text-yellow-500 text-2xl\">°C</span>\n                  </h1>\n                </div>\n                <div class=\"content\">\n                  <h1 class=\"text-gray-300 text-center text-2xl \">\n                    <span class=\"text-yellow-500 text-2xl\">Humidity: </span>\n                    {Math.ceil(Number(weather?.daily[0].humidity))}{\" \"}\n                  </h1>\n                </div>\n              </div> \n            </div>\n\n\n            <div class=\"container1\">\n              <div class=\"block\" id=\"result1\">\n                <div class=\"image\">\n                  <img src={`https://openweathermap.org/img/wn/${weather?.daily[1].weather[0].icon}@2x.png`}\n                        alt=\"/\" width=\"60px\" height=\"60px\"/>\n                </div>\n                <h1 class = \"day\"> { days_res[1] }</h1>\n                <div class=\"content\"> \n                  <h1 class=\"text-gray-300 text-center text-2xl \">\n                    <span class=\"text-yellow-500 text-2xl\">Max: </span>\n                    {Math.ceil(Number(weather?.daily[1].temp?.max)-273.15)}{\" \"}\n                    <span class=\"text-yellow-500 text-2xl\">°C</span>\n                  </h1>\n                  <h1 class=\"text-gray-300 text-center text-2xl\">\n                    <span class=\"text-yellow-500 text-2xl\">Min: </span>\n                    {Math.ceil(Number(weather?.daily[1].temp?.min)-273.15)}{\" \"}\n                    <span class=\"text-yellow-500 text-2xl\">°C</span>\n                  </h1>\n                </div>\n                <div class=\"content\">\n                  <h1 class=\"text-gray-300 text-center text-2xl \">\n                    <span class=\"text-yellow-500 text-2xl\">Humidity: </span>\n                    {Math.ceil(Number(weather?.daily[1].humidity))}{\" \"}\n                  </h1>\n                </div>\n              </div> \n          \n              <div class=\"block\" id=\"result1\">\n                <div class=\"image\">\n                  <img src={`https://openweathermap.org/img/wn/${weather?.daily[0].weather[0].icon}@2x.png`}\n                        alt=\"/\" width=\"60px\" height=\"60px\"/>\n                </div>\n                <h1 class = \"day\"> { days_res[2] }</h1>\n                <div class=\"content\"> \n                  <h1 class=\"text-gray-300 text-center text-2xl \">\n                    <span class=\"text-yellow-500 text-2xl\">Max: </span>\n                    {Math.ceil(Number(weather?.daily[2].temp?.max)-273.15)}{\" \"}\n                    <span class=\"text-yellow-500 text-2xl\">°C</span>\n                  </h1>\n                  <h1 class=\"text-gray-300 text-center text-2xl\">\n                    <span class=\"text-yellow-500 text-2xl\">Min: </span>\n                    {Math.ceil(Number(weather?.daily[2].temp?.min)-273.15)}{\" \"}\n                    <span class=\"text-yellow-500 text-2xl\">°C</span>\n                  </h1>\n                </div>\n                <div class=\"content\">\n                  <h1 class=\"text-gray-300 text-center text-2xl \">\n                    <span class=\"text-yellow-500 text-2xl\">Humidity: </span>\n                    {Math.ceil(Number(weather?.daily[2].humidity))}{\" \"}\n                  </h1>\n                </div>\n              </div> \n\n              <div class=\"block\" id=\"result1\">\n                <div class=\"image\">\n                  <img src={`https://openweathermap.org/img/wn/${weather?.daily[3].weather[0].icon}@2x.png`}\n                        alt=\"/\" width=\"60px\" height=\"60px\"/>\n                </div>\n                <h1 class = \"day\"> { days_res[3] }</h1>\n                <div class=\"content\"> \n                  <h1 class=\"text-gray-300 text-center text-2xl \">\n                    <span class=\"text-yellow-500 text-2xl\">Max: </span>\n                    {Math.ceil(Number(weather?.daily[3].temp?.max)-273.15)}{\" \"}\n                    <span class=\"text-yellow-500 text-2xl\">°C</span>\n                  </h1>\n                  <h1 class=\"text-gray-300 text-center text-2xl\">\n                    <span class=\"text-yellow-500 text-2xl\">Min: </span>\n                    {Math.ceil(Number(weather?.daily[3].temp?.min)-273.15)}{\" \"}\n                    <span class=\"text-yellow-500 text-2xl\">°C</span>\n                  </h1>\n                </div>\n                <div class=\"content\">\n                  <h1 class=\"text-gray-300 text-center text-2xl \">\n                    <span class=\"text-yellow-500 text-2xl\">Humidity: </span>\n                    {Math.ceil(Number(weather?.daily[3].humidity))}{\" \"}\n                  </h1>\n                </div>\n              </div> \n\n              <div class=\"block\" id=\"result1\">\n                <div class=\"image\">\n                  <img src={`https://openweathermap.org/img/wn/${weather?.daily[4].weather[0].icon}@2x.png`}\n                        alt=\"/\" width=\"60px\" height=\"60px\"/>\n                </div>\n                <h1 class = \"day\"> { days_res[4] }</h1>\n                <div class=\"content\"> \n                  <h1 class=\"text-gray-300 text-center text-2xl \">\n                    <span class=\"text-yellow-500 text-2xl\">Max: </span>\n                    {Math.ceil(Number(weather?.daily[4].temp?.max)-273.15)}{\" \"}\n                    <span class=\"text-yellow-500 text-2xl\">°C</span>\n                  </h1>\n                  <h1 class=\"text-gray-300 text-center text-2xl\">\n                    <span class=\"text-yellow-500 text-2xl\">Min: </span>\n                    {Math.ceil(Number(weather?.daily[4].temp?.min)-273.15)}{\" \"}\n                    <span class=\"text-yellow-500 text-2xl\">°C</span>\n                  </h1>\n                </div>\n                <div class=\"content\">\n                  <h1 class=\"text-gray-300 text-center text-2xl \">\n                    <span class=\"text-yellow-500 text-2xl\">Humidity: </span>\n                    {Math.ceil(Number(weather?.daily[4].humidity))}{\" \"}\n                  </h1>\n                </div>\n              </div> \n\n              <div class=\"block\" id=\"result1\">\n                <div class=\"image\">\n                  <img src={`https://openweathermap.org/img/wn/${weather?.daily[3].weather[0].icon}@2x.png`}\n                        alt=\"/\" width=\"60px\" height=\"60px\"/>\n                </div>\n                <h1 class = \"day\"> { days_res[5] }</h1>\n                <div class=\"content\"> \n                  <h1 class=\"text-gray-300 text-center text-2xl \">\n                    <span class=\"text-yellow-500 text-2xl\">Max: </span>\n                    {Math.ceil(Number(weather?.daily[5].temp?.max)-273.15)}{\" \"}\n                    <span class=\"text-yellow-500 text-2xl\">°C</span>\n                  </h1>\n                  <h1 class=\"text-gray-300 text-center text-2xl\">\n                    <span class=\"text-yellow-500 text-2xl\">Min: </span>\n                    {Math.ceil(Number(weather?.daily[5].temp?.min)-273.15)}{\" \"}\n                    <span class=\"text-yellow-500 text-2xl\">°C</span>\n                  </h1>\n                </div>\n                <div class=\"content\">\n                  <h1 class=\"text-gray-300 text-center text-2xl \">\n                    <span class=\"text-yellow-500 text-2xl\">Humidity: </span>\n                    {Math.ceil(Number(weather?.daily[5].humidity))}{\" \"}\n                  </h1>\n                </div>\n              </div> \n            </div>\n        </div>\n        )}\n      </section>\n    </div>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}